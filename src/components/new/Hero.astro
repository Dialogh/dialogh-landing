---
import Header from "./Header.astro";
import HeroBG from "../../assets/dialogh-hero.svg";
import PinkHeroBg from "../../assets/dialogh-hero-pink.svg";
import Image from "astro/components/Image.astro";
import Arrow from "../../assets/arrow.svg";
---

<main class="bg-[#FFFCF6] w-full h-full rounded-3xl relative">
  <div class="max-w-7xl h-full mx-auto px-4 sm:px-6 lg:px-8">
    <Header />
    <div class="h-full flex flex-col justify-center relative z-10">
      <div class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl leading-tight">
        <h1>The Creator's Circle for Code,</h1>
        <h1>Design, and Conversation.</h1>
      </div>
      <p
        class="text-base sm:text-lg md:text-xl text-black/70 mt-4 sm:mt-2 max-w-2xl"
      >
        A curated community where developers, designers, and thinkers explore
        ideas, solve real problems, and build what's next â€” together.
      </p>
      <!-- <button
                class="bg-black mt-12 sm:mt-16 md:mt-24 w-fit text-white py-2.5 px-6 flex items-center cursor-pointer gap-2 rounded-full font-medium text-sm sm:text-base hover:bg-black/90 transition-colors duration-200"
            >
                Join Now
            </button> -->
      <a
        href="https://dsc.gg/dialogh"
        target="_blank"
        class="uiverse group/button !mt-12 w-fit transition-all duration-300 ease-in-out"
      >
        <div class="wrapper flex items-center justify-center gap-2">
          <span class="font-medium">Join Now</span>
          <!-- <Image
            src={Arrow}
            alt="arrow"
            class="w-0 h-4 opacity-0 group-hover/button:w-4 group-hover/button:opacity-100 transition-all duration-300 ease-in-out"
          /> -->
          <svg
            class="opacity-0 z-10 size-0 group-hover/button:opacity-100 transition-all duration-300 ease-in-out group-hover/button:size-6"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="white"
            ><path
              d="M13.1717 12.0007L8.22192 7.05093L9.63614 5.63672L16.0001 12.0007L9.63614 18.3646L8.22192 16.9504L13.1717 12.0007Z"
            ></path></svg
          >
          <div class="circle circle-12"></div>
          <div class="circle circle-11"></div>
          <div class="circle circle-10"></div>
          <div class="circle circle-9"></div>
          <div class="circle circle-8"></div>
          <div class="circle circle-7"></div>
          <div class="circle circle-6"></div>
          <div class="circle circle-5"></div>
          <div class="circle circle-4"></div>
          <div class="circle circle-3"></div>
          <div class="circle circle-2"></div>
          <div class="circle circle-1"></div>
        </div>
      </a>

      <button
        id="scroll-to-about"
        class="absolute bottom-20 sm:bottom-16 md:bottom-24 left-0 bg-black/10 py-2 px-3 sm:py-3 sm:px-4 rounded-xl sm:rounded-2xl hover:shadow-xl transition-shadow duration-300 cursor-pointer"
      >
        <Image
          src={Arrow}
          alt="arrow"
          class="invert rotate-90 w-3 h-3 sm:w-4 sm:h-4"
        />
      </button>
    </div>
    <div
      class="absolute z-0 inset-0 left-[0%] sm:left-[50%] md:left-[45%] lg:left-[40%] 2xl:left-[50%] opacity-80 sm:opacity-100"
    >
      <Image
        src={PinkHeroBg}
        alt="Dialogh Hero Background"
        class="w-full h-full object-cover object-left opacity-50"
      />
      <!-- <div class="">
                <HeroBG />
            </div> -->
    </div>
  </div>
</main>

<script>
  import { animate, svg, stagger } from "animejs";
  document.addEventListener("DOMContentLoaded", () => {
    animate(svg.createDrawable(".line"), {
      draw: ["0 0", "0 1", "1 1"],
      ease: "inOutQuad",
      duration: 2000,
      delay: stagger(100),
      loop: true,
    });
    const scrollButton = document.getElementById("scroll-to-about");
    if (scrollButton) {
      scrollButton.addEventListener("click", () => {
        if (window.lenis) {
          window.lenis.scrollTo("#about");
        } else {
          // Fallback for regular scroll
          document.getElementById("about")?.scrollIntoView({
            behavior: "smooth",
          });
        }
      });
    }
  });
</script>

<style is:inline>
  /* From Uiverse.io by _1999 */
  .uiverse {
    --duration: 7s;
    --easing: linear;
    --c-color-1: #ffd58c;
    --c-color-2: #69a5ff;
    --c-color-3: #c29fff;
    --c-color-4: rgba(140, 232, 255, 0.7);
    --c-shadow: rgba(99, 85, 255, 0.59);
    --c-shadow-inset-top: rgba(132, 156, 255, 0.9);
    --c-shadow-inset-bottom: rgba(62, 145, 255, 0.614);
    --c-radial-inner: #2637a4;
    --c-radial-outer: #5f64ea;
    --c-color: #ffffff;
    -webkit-tap-highlight-color: transparent;
    -webkit-appearance: none;
    outline: none;
    position: relative;
    cursor: pointer;
    border: none;
    display: table;
    border-radius: 24px;
    padding: 0;
    margin: 0;
    text-align: center;
    font-weight: 600;
    font-size: 16px;
    letter-spacing: 0.05em;
    line-height: 1.5;
    color: var(--c-color);
    background: radial-gradient(
      circle,
      var(--c-radial-inner),
      var(--c-radial-outer) 80%
    );
    box-shadow: 0 0 14px var(--c-shadow);
  }

  .uiverse:before {
    content: "";
    pointer-events: none;
    position: absolute;
    z-index: 3;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    border-radius: 28px;
    box-shadow:
      inset 0 3px 12px var(--c-shadow-inset-top),
      inset 0 -3px 4px var(--c-shadow-inset-bottom);
  }

  .uiverse .wrapper {
    -webkit-mask-image: -webkit-radial-gradient(white, black);
    overflow: hidden;
    border-radius: 26px;
    min-width: 132px;
    max-width: 200px;
    padding: 12px 0;
  }

  .uiverse .wrapper span {
    display: inline-block;
    position: relative;
    z-index: 1;
  }

  .uiverse:hover {
    --duration: 1400ms;
  }

  .uiverse .wrapper .circle {
    position: absolute;
    left: 0;
    top: 0;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    filter: blur(var(--blur, 8px));
    background: var(--background, transparent);
    transform: translate(var(--x, 0), var(--y, 0)) translateZ(0);
    animation: var(--animation, none) var(--duration) var(--easing) infinite;
  }

  .uiverse .wrapper .circle.circle-1,
  .uiverse .wrapper .circle.circle-9,
  .uiverse .wrapper .circle.circle-10 {
    --background: var(--c-color-4);
  }

  .uiverse .wrapper .circle.circle-3,
  .uiverse .wrapper .circle.circle-4 {
    --background: var(--c-color-2);
    --blur: 14px;
  }

  .uiverse .wrapper .circle.circle-5,
  .uiverse .wrapper .circle.circle-6 {
    --background: var(--c-color-3);
    --blur: 16px;
  }

  .uiverse .wrapper .circle.circle-2,
  .uiverse .wrapper .circle.circle-7,
  .uiverse .wrapper .circle.circle-8,
  .uiverse .wrapper .circle.circle-11,
  .uiverse .wrapper .circle.circle-12 {
    --background: var(--c-color-1);
    --blur: 12px;
  }

  .uiverse .wrapper .circle.circle-1 {
    --x: 0;
    --y: -40px;
    --animation: circle-1;
  }

  .uiverse .wrapper .circle.circle-2 {
    --x: 92px;
    --y: 8px;
    --animation: circle-2;
  }

  .uiverse .wrapper .circle.circle-3 {
    --x: -12px;
    --y: -12px;
    --animation: circle-3;
  }

  .uiverse .wrapper .circle.circle-4 {
    --x: 80px;
    --y: -12px;
    --animation: circle-4;
  }

  .uiverse .wrapper .circle.circle-5 {
    --x: 12px;
    --y: -4px;
    --animation: circle-5;
  }

  .uiverse .wrapper .circle.circle-6 {
    --x: 56px;
    --y: 16px;
    --animation: circle-6;
  }

  .uiverse .wrapper .circle.circle-7 {
    --x: 8px;
    --y: 28px;
    --animation: circle-7;
  }

  .uiverse .wrapper .circle.circle-8 {
    --x: 28px;
    --y: -4px;
    --animation: circle-8;
  }

  .uiverse .wrapper .circle.circle-9 {
    --x: 20px;
    --y: -12px;
    --animation: circle-9;
  }

  .uiverse .wrapper .circle.circle-10 {
    --x: 64px;
    --y: 16px;
    --animation: circle-10;
  }

  .uiverse .wrapper .circle.circle-11 {
    --x: 4px;
    --y: 4px;
    --animation: circle-11;
  }

  .uiverse .wrapper .circle.circle-12 {
    --blur: 14px;
    --x: 52px;
    --y: 4px;
    --animation: circle-12;
  }

  @keyframes circle-1 {
    33% {
      transform: translate(0px, 16px) translateZ(0);
    }

    66% {
      transform: translate(12px, 64px) translateZ(0);
    }
  }

  @keyframes circle-2 {
    33% {
      transform: translate(80px, -10px) translateZ(0);
    }

    66% {
      transform: translate(72px, -48px) translateZ(0);
    }
  }

  @keyframes circle-3 {
    33% {
      transform: translate(20px, 12px) translateZ(0);
    }

    66% {
      transform: translate(12px, 4px) translateZ(0);
    }
  }

  @keyframes circle-4 {
    33% {
      transform: translate(76px, -12px) translateZ(0);
    }

    66% {
      transform: translate(112px, -8px) translateZ(0);
    }
  }

  @keyframes circle-5 {
    33% {
      transform: translate(84px, 28px) translateZ(0);
    }

    66% {
      transform: translate(40px, -32px) translateZ(0);
    }
  }

  @keyframes circle-6 {
    33% {
      transform: translate(28px, -16px) translateZ(0);
    }

    66% {
      transform: translate(76px, -56px) translateZ(0);
    }
  }

  @keyframes circle-7 {
    33% {
      transform: translate(8px, 28px) translateZ(0);
    }

    66% {
      transform: translate(20px, -60px) translateZ(0);
    }
  }

  @keyframes circle-8 {
    33% {
      transform: translate(32px, -4px) translateZ(0);
    }

    66% {
      transform: translate(56px, -20px) translateZ(0);
    }
  }

  @keyframes circle-9 {
    33% {
      transform: translate(20px, -12px) translateZ(0);
    }

    66% {
      transform: translate(80px, -8px) translateZ(0);
    }
  }

  @keyframes circle-10 {
    33% {
      transform: translate(68px, 20px) translateZ(0);
    }

    66% {
      transform: translate(100px, 28px) translateZ(0);
    }
  }

  @keyframes circle-11 {
    33% {
      transform: translate(4px, 4px) translateZ(0);
    }

    66% {
      transform: translate(68px, 20px) translateZ(0);
    }
  }

  @keyframes circle-12 {
    33% {
      transform: translate(56px, 0px) translateZ(0);
    }

    66% {
      transform: translate(60px, -32px) translateZ(0);
    }
  }
</style>
